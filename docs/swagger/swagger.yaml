basePath: /
definitions:
  recipes.Ingredient:
    properties:
      name:
        type: string
      qty:
        type: number
      unit:
        type: string
    required:
    - name
    type: object
  recipes.Recipe:
    properties:
      contributors:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      imgUrl:
        type: string
      ingredients:
        items:
          $ref: '#/definitions/recipes.Ingredient'
        type: array
      name:
        type: string
      owner:
        type: string
      steps:
        items:
          $ref: '#/definitions/recipes.Step'
        type: array
      tags:
        items:
          type: string
        type: array
      time:
        $ref: '#/definitions/recipes.Time'
        type: object
      url:
        type: string
      yield:
        type: integer
    required:
    - tags
    - name
    - contributors
    type: object
  recipes.Step:
    properties:
      description:
        type: string
      name:
        type: string
      time:
        $ref: '#/definitions/recipes.Time'
        type: object
    required:
    - name
    type: object
  recipes.Time:
    properties:
      cookSec:
        type: integer
      prepSec:
        type: integer
    type: object
  respond.ErrorPayload:
    properties:
      error:
        type: string
    type: object
host: go-cook.herokuapp.com
info:
  contact:
    name: API Support
    url: https://github.com/jjmschofield/GoCook
  description: An API for working for collaborating on recipes and sharing meal plans.
  license:
    name: No Licence
    url: https://github.com/jjmschofield/GoCook
  termsOfService: https://not-implemented.com
  title: GoCook API Reference
  version: "1.0"
paths:
  /recipes:
    get:
      consumes:
      - application/json
      description: Gets all recipes which the caller has access to, note pagination
        is not implemented yet.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/recipes.Recipe'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
      security:
      - OAuth2Implicit: []
      summary: Get All Recipes
      tags:
      - Recipes
    post:
      consumes:
      - application/json
      description: Saves a new recipe (when Id is null) or updates a recipe (when
        id is populated, valid and owned by the caller)
      parameters:
      - description: The recipe to save
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/recipes.Recipe'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: The saved recipe - may include mutations, eg generated IDs
          schema:
            $ref: '#/definitions/recipes.Recipe'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
      security:
      - OAuth2Implicit: []
      summary: Save Recipe
      tags:
      - Recipes
  /recipes/{id}:
    get:
      consumes:
      - application/json
      description: Gets a recipe by ID which the caller has access to.
      parameters:
      - description: The uuid of the recipe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/recipes.Recipe'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/respond.ErrorPayload'
            type: object
      security:
      - OAuth2Implicit: []
      summary: Get Recipe by Id
      tags:
      - Recipes
schemes:
- http
swagger: "2.0"
