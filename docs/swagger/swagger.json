{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "An API for working for collaborating on recipes and sharing meal plans.",
        "title": "GoCook API Reference",
        "termsOfService": "https://not-implemented.com",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/jjmschofield/GoCook"
        },
        "license": {
            "name": "No Licence",
            "url": "https://github.com/jjmschofield/GoCook"
        },
        "version": "1.0"
    },
    "host": "go-cook.herokuapp.com",
    "basePath": "/",
    "paths": {
        "/recipes": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": []
                    }
                ],
                "description": "Gets all recipes which the caller has access too",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Get All Recipes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recipes.Recipe"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Implicit": []
                    }
                ],
                "description": "Saves a new recipe (when Id is null) or updates a recipe (when id is populated, valid and owned by the caller)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Save Recipe",
                "parameters": [
                    {
                        "description": "The recipe to save",
                        "name": "recipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/recipes.Recipe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The saved recipe - may include mutations, eg generated IDs",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/recipes.Recipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    }
                }
            }
        },
        "/recipes/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": []
                    }
                ],
                "description": "Gets a recipe by ID which the caller has access too",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Get Recipe by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The uuid of the recipe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/recipes.Recipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/respond.ErrorPayload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "recipes.Ingredient": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "qty": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "recipes.Recipe": {
            "type": "object",
            "required": [
                "name",
                "tags",
                "contributors"
            ],
            "properties": {
                "contributors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imgUrl": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipes.Ingredient"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipes.Step"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time": {
                    "type": "object",
                    "$ref": "#/definitions/recipes.Time"
                },
                "url": {
                    "type": "string"
                },
                "yield": {
                    "type": "integer"
                }
            }
        },
        "recipes.Step": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "time": {
                    "type": "object",
                    "$ref": "#/definitions/recipes.Time"
                }
            }
        },
        "recipes.Time": {
            "type": "object",
            "properties": {
                "cookSec": {
                    "type": "integer"
                },
                "prepSec": {
                    "type": "integer"
                }
            }
        },
        "respond.ErrorPayload": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}